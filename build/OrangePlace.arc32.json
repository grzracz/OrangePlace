{
  "hints": {
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "createQuadrant(uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "updatePixel(byte[],uint64,uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "CREATE",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "ora": {
          "type": "uint64",
          "key": "ora"
        },
        "bonfire": {
          "type": "bytes",
          "key": "bonfire"
        },
        "minPayment": {
          "type": "uint64",
          "key": "cost"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 2
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "OrangePlace",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createQuadrant",
        "args": [
          {
            "name": "x",
            "type": "uint64"
          },
          {
            "name": "y",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "updatePixel",
        "args": [
          {
            "name": "quadrant",
            "type": "byte[]"
          },
          {
            "name": "x",
            "type": "uint64"
          },
          {
            "name": "y",
            "type": "uint64"
          },
          {
            "name": "color",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}